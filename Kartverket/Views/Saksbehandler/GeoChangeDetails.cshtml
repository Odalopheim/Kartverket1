@model Kartverket.ViewModels.GeoChangeDetailsViewModel
@using Kartverket.Data

@{
    ViewData["Title"] = "GeoChange Details";
}

<h2 class="green-text">Innmelding til behandling</h2>

<form asp-action="SaveChanges" method="post">
    <input type="hidden" asp-for="GeoChange.Id" />
    <input type="hidden" asp-for="GeoChange.UserId" />

    <div class="flex-container">
        
        <!-- Info Column -->
        <div class="column">

            <div>
                <p><strong>Dato: </strong>@Model.GeoChange.CreatedDate.ToString("dd.MM.yyyy")</p>
                <p><strong>Bruker: </strong>@Model.UserName</p>
            </div>

            <div>
<label>Status</label><br />
     <div>
         @foreach (var status in Enum.GetValues(typeof(GeoChangeStatus)).Cast<GeoChangeStatus>())
         {
            <button type="button" class="btn @(status == Model.GeoChange.Status ? "btn-success" : "btn-secondary")" data-status="@status">@status</button>
         }
              <input type="hidden" id="Status" name="GeoChange.Status" value="@Model.GeoChange.Status" />
     </div>
 </div>

<div>
     <label>Kategori</label><br />
         <div>
             <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Stedsnavn ? "btn-success" : "btn-secondary")" data-category="Stedsnavn">Stedsnavn</button>
              <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Veinavn ? "btn-success" : "btn-secondary")" data-category="Veinavn">Veinavn</button>
              <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Tursti ? "btn-success" : "btn-secondary")" data-category="Tursti">Tursti</button>
              <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Bilvei ? "btn-success" : "btn-secondary")" data-category="Bilvei">Bilvei</button>
              <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Annet ? "btn-success" : "btn-secondary")" data-category="Annet">Annet</button>
                <input type="hidden" id="Kategori" name="GeoChange.Category" value="@Model.GeoChange.Category" />
         </div>
</div>



            <div>
                <p><strong>Beskrivelse: </strong>@Model.GeoChange.Description</p>
            </div>

            <div>
                <p><strong>Kart: </strong>@Model.GeoChange.GeoJson</p>
            </div>

            <div>
                <button type="submit" class="btn btn-success">Lagre</button>
                <a asp-action="Saksbehandler" class="btn btn-secondary">Tilbake</a>
            </div>
        </div>

        <!-- Map Column -->
        <div style="width: 48%; height: 100%;">
            <<div id="map" style="width: 100%; height: 400px;"></div>>
        </div>

    </div>
</form>

@using System.Text.Json
@section Scripts {
    <!-- Leaflet CSS og JavaScript -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <script>
        // Initialiser kartet med senter i Kristiansand
        var map = L.map('map').setView([58.1467, 7.9956], 15);

        // Definer kartlagene (topografisk og grått kart)
        var topoLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        var grayLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        // Legg til topografisk kart som standard
        topoLayer.addTo(map);

        // Legg til lagkontroll for å bytte mellom kartlagene
        var baseMaps = {
            "Topografisk kart": topoLayer,
            "Grått kart": grayLayer
        };
        L.control.layers(baseMaps).addTo(map);

        // Last inn GeoJSON-data fra serveren
        var geoJsonData = @Html.Raw(JsonSerializer.Serialize(Model.GeoChange.GeoJson));
        
        try {
            if (geoJsonData && geoJsonData !== "null") {
                // Sikker parsing av GeoJSON-data
                var parsedData = JSON.parse(geoJsonData); 

                // Legg til GeoJSON-lag på kartet
                var geoJsonLayer = L.geoJSON(parsedData, {
                    onEachFeature: function (feature, layer) {
                        if (feature.properties && feature.properties.Category) {
                            layer.bindPopup("Kategori: " + feature.properties.Category);
                        }
                    }
                }).addTo(map);

                // Tilpass visningen til geojson-lagets grenser
                map.fitBounds(geoJsonLayer.getBounds());
            } else {
                console.warn("Ingen GeoJSON-data tilgjengelig");
            }
        } catch (e) {
            console.error("Feil i GeoJSON-data parsing: ", e);
            alert("Kunne ikke laste GeoJSON-data. Sjekk konsollen for detaljer.");
        }

        // Oppdater skjulte inputfelt basert på knappetrykk
        document.querySelectorAll('button[data-status]').forEach(button => {
            button.addEventListener('click', function () {
                document.getElementById('Status').value = this.getAttribute('data-status');
                // Oppdater knappstiler dynamisk
                document.querySelectorAll('button[data-status]').forEach(b => b.classList.remove('btn-success'));
                this.classList.add('btn-success');
            });
        });

        // Håndter klikk på kategori-knapper
        document.querySelectorAll('button[data-category]').forEach(button => {
            button.addEventListener('click', function () {
                document.getElementById('Kategori').value = this.getAttribute('data-category');
                // Oppdater knappstiler dynamisk
                document.querySelectorAll('button[data-category]').forEach(b => b.classList.remove('btn-success'));
                this.classList.add('btn-success');
            });
        });
    </script>
}
