@model Kartverket.ViewModels.GeoChangeDetailsViewModel
@using Kartverket.Data

@{
    ViewData["Title"] = "GeoChange Details";
}

<h2>GeoChange Details</h2>

<form asp-action="SaveChanges" method="post">
    <input type="hidden" asp-for="GeoChange.Id" />
    <input type="hidden" asp-for="GeoChange.UserId" />

    <div style="display: flex; justify-content: space-between; gap: 20px;">

        <!-- Info Column -->
        <div style="width: 48%;">

            <div>
                <p><strong>Dato: </strong>@Model.GeoChange.CreatedDate.ToString("dd.MM.yyyy")</p>
                <p><strong>Bruker: </strong>@Model.UserName</p>
            </div>

            <div>
                <label>Status</label><br />
                <div>
                    @foreach (var status in Enum.GetValues(typeof(GeoChangeStatus)).Cast<GeoChangeStatus>())
                    {
                        <button type="button" class="btn @(status == Model.GeoChange.Status ? "btn-success" : "btn-secondary")" onclick="document.getElementById('Status').value='@status'">@status</button>
                    }
                    <input type="hidden" id="Status" name="Status" value="@Model.GeoChange.Status" asp-for="GeoChange.Status" />
                </div>
            </div>

            <div>
                <label>Kategori</label><br />
                <div>
                    <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Stedsnavn ? "btn-success" : "btn-secondary")" onclick="document.getElementById('Kategori').value='Stedsnavn'">Stedsnavn</button>
                    <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Veinavn ? "btn-success" : "btn-secondary")" onclick="document.getElementById('Kategori').value='Veinavn'">Veinavn</button>
                    <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Tursti ? "btn-success" : "btn-secondary")" onclick="document.getElementById('Kategori').value='Tursti'">Tursti</button>
                    <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Bilvei ? "btn-success" : "btn-secondary")" onclick="document.getElementById('Kategori').value='Bilvei'">Bilvei</button>
                    <button type="button" class="btn @(Model.GeoChange.Category == GeoChangeCategory.Annet ? "btn-success" : "btn-secondary")" onclick="document.getElementById('Kategori').value='Annet'">Annet</button>
                    <input type="hidden" id="Kategori" name="Kategori" value="@Model.GeoChange.Category" asp-for="GeoChange.Category" />
                </div>
            </div>

            <div>
                <p><strong>Beskrivelse: </strong>@Model.GeoChange.Description</p>
            </div>

            <div>
                <p><strong>Kart: </strong>@Model.GeoChange.GeoJson</p>
            </div>

            <div>
                <button type="submit" class="btn btn-success">Lagre</button>
                <a asp-action="Saksbehandler" class="btn btn-secondary">Tilbake</a>
            </div>
        </div>

        <!-- Map Column -->
        <div style="width: 48%; height: 450px;">
            <div id="map" style="width: 100%; height: 100%;"></div>
        </div>

    </div>
</form>

@using System.Text.Json

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <script>
        // Initialiser kartet med senter i Kristiansand
        var map = L.map('map').setView([58.1467, 7.9956], 15);

        // Definer kartlagene
        var topoLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        var grayLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        // Legg til topografisk kart som standard
        topoLayer.addTo(map);

        // Legg til lagkontroll for å bytte mellom kartlagene
        var baseMaps = {
            "Topografisk kart": topoLayer,
            "Grått kart": grayLayer
        };
        L.control.layers(baseMaps).addTo(map);

        // Legg til GeoJSON-data fra serveren
        var geoJsonData = @Html.Raw(JsonSerializer.Serialize(Model.GeoChange.GeoJson));
        if (geoJsonData && geoJsonData !== "null") {
            var geoJsonLayer = L.geoJSON(JSON.parse(geoJsonData), {
                onEachFeature: function(feature, layer) {
                    if (feature.properties && feature.properties.Category) {
                        layer.bindPopup("Category: " + feature.properties.Category);
                    }
                }
            }).addTo(map);
            map.fitBounds(geoJsonLayer.getBounds());
        } else {
            alert("Ingen GeoJSON-data tilgjengelig");
        }

        // Legg til søkefunksjon
        L.Control.geocoder({
            defaultMarkGeocode: false
        }).on('markgeocode', function(e) {
            var center = e.geocode.center;
            map.setView(center, 15);
        }).addTo(map);
    </script>
}
