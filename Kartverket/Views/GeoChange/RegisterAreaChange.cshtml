@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Ny Innmelding";
}

<!-- Deler skjermen -->
<div class="flex-container1">

    <!-- Plasserer kartet til venstre -->
    <div class="left-panel">
        <div id="map" class="map-small"></div>
    </div>

    <!-- Innmeldings siden til høyre -->
    <div class="right-panel1">
        <h2 class="green-text">Rett i kartet</h2>
        <form id="innmeldingForm" asp-action="RegisterAreaChange" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
            <input type="hidden" id="geoJsonInput" name="geoJson" />
            <!-- Velge mellom katogorier  -->
            <div>
                <label for="category" class="form-label">Kategori</label>
                <select id="category" class="form-select" name="Category">
                    <option value="Stedsnavn">Stedsnavn</option>
                    <option value="Veinavn">Veinavn</option>
                    <option value="Tursti">Tursti</option>
                    <option value="Bilvei">Bilvei</option>
                    <option value="Annet">Annet</option>
                </select>
            </div>

            <div class="mt-3">
                <label for="description" class="form-label">Beskrivelse</label>
                <textarea class="form-control" id="description" name="description" rows="3"></textarea>
            </div>


            <br />
            <button type="submit" class= "btn btn-success btn btn-success">Send inn</button>
        </form>
    </div>
</div>

<!-- Modal -->
<div id="validationModal" class="custom-modal">
  <div class="modal-content1">
    <div class="modal-header">
      <span class="close" id="closeModalSpan">&times;</span>
      <h2>Valideringsfeil</h2>
    </div>
    <div class="modal-body">
      <p>Alle feltene må fylles ut.</p>
    </div>
    <div class="modal-footer">
      <button type="button" class="btn1" id="closeModalButton">Lukk</button>
    </div>
  </div>
</div>





@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
    <script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

    <script>
        var map = L.map('map').setView([58.1467, 7.9956], 15);

        
        var topoLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });
        var grayLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        topoLayer.addTo(map);

        var baseMaps = {
            "Topografisk kart": topoLayer,
            "Grått kart": grayLayer
        };

        L.control.layers(baseMaps).addTo(map);

        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        var drawControl = new L.Control.Draw({
            draw: {
                polygon: true,
                polyline: true,
                marker: true,
                circle: false,
                rectangle: true
            },
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);

        map.on(L.Draw.Event.CREATED, function (e) {
            var layer = e.layer;
            drawnItems.addLayer(layer);
            var geoJsonData = layer.toGeoJSON();
            var geoJsonString = JSON.stringify(geoJsonData);
            document.getElementById('geoJsonInput').value = geoJsonString;
        });


        L.Control.geocoder({
            defaultMarkGeocode: false
        })
            .on('markgeocode', function (e) {
                var center = e.geocode.center;
                map.setView(center, 15);
            })
            .addTo(map);

        // Valideringsfunksjon for skjemaet
        function validateForm() {
            var category = document.getElementById('category').value;
            var description = document.getElementById('description').value;
            var geoJsonInput = document.getElementById('geoJsonInput').value;

            if (!category || !description || !geoJsonInput) {
                var modal = document.getElementById("validationModal");
                modal.style.display = "block";
                return false; 
            }
            return true; 
        }

        // Legg til event listener på skjemaet
        document.getElementById('innmeldingForm').addEventListener('submit', function(event) {
            if (!validateForm()) {
                event.preventDefault();
            }
        });

        // Funksjon for å kun lukke modal uten omdirigering
        function closeModal() {
            document.getElementById('validationModal').style.display = "none";
        }

        // Lukk modal når brukeren klikker på <span> (x)
        document.getElementById('closeModalSpan').onclick = closeModal;

        // Lukk modal når brukeren klikker på Lukk-knappen
        document.getElementById('closeModalButton').onclick = closeModal;

        // Lukk modal når brukeren klikker utenfor modal
        window.onclick = function(event) {
            var modal = document.getElementById('validationModal');
            if (event.target == modal) {
                closeModal();
            }
        }



    </script>
}
